package com.comiteetica.hibernate.model;
// Generated 17-jun-2017 14:55:19 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Registro generated by hbm2java
 */
@Entity
@Table(name="Registro"
    ,schema="dbo"
    ,catalog="ComiteEtica"
)
public class Registro  implements java.io.Serializable {


     private String idRegistro;
     private Investigacion investigacion;
     private InvestigacionInvestigador investigacionInvestigador;
     private InvestigacionSede investigacionSede;
     private Date fechaAprobacion;
     private String paramEstado;
     private String observacion;
     private String farmacoExperimental;
     private Boolean placebo;
     private String pacienteEas;
     private String easLocal;
     private String paramNotificacion;
     private Date fechaEas;
     private String visitaInspeccion;
     private Boolean estudioNinos;
     private String visitaInspeccionIns;
     private String usuarioIngresa;
     private Date fechaIngreso;
     private String usuarioModifica;
     private Date fechaModificacion;
     private Set<RegistroBitacora> registroBitacoras = new HashSet<RegistroBitacora>(0);
     private Set<Correspondencia> correspondencias = new HashSet<Correspondencia>(0);

    public Registro() {
    }

	
    public Registro(String idRegistro) {
        this.idRegistro = idRegistro;
    }
    public Registro(String idRegistro, Investigacion investigacion, InvestigacionInvestigador investigacionInvestigador, InvestigacionSede investigacionSede, Date fechaAprobacion, String paramEstado, String observacion, String farmacoExperimental, Boolean placebo, String pacienteEas, String easLocal, String paramNotificacion, Date fechaEas, String visitaInspeccion, Boolean estudioNinos, String visitaInspeccionIns, String usuarioIngresa, Date fechaIngreso, String usuarioModifica, Date fechaModificacion, Set<RegistroBitacora> registroBitacoras, Set<Correspondencia> correspondencias) {
       this.idRegistro = idRegistro;
       this.investigacion = investigacion;
       this.investigacionInvestigador = investigacionInvestigador;
       this.investigacionSede = investigacionSede;
       this.fechaAprobacion = fechaAprobacion;
       this.paramEstado = paramEstado;
       this.observacion = observacion;
       this.farmacoExperimental = farmacoExperimental;
       this.placebo = placebo;
       this.pacienteEas = pacienteEas;
       this.easLocal = easLocal;
       this.paramNotificacion = paramNotificacion;
       this.fechaEas = fechaEas;
       this.visitaInspeccion = visitaInspeccion;
       this.estudioNinos = estudioNinos;
       this.visitaInspeccionIns = visitaInspeccionIns;
       this.usuarioIngresa = usuarioIngresa;
       this.fechaIngreso = fechaIngreso;
       this.usuarioModifica = usuarioModifica;
       this.fechaModificacion = fechaModificacion;
       this.registroBitacoras = registroBitacoras;
       this.correspondencias = correspondencias;
    }
   
     @Id 

    
    @Column(name="IdRegistro", nullable=false, length=10)
    public String getIdRegistro() {
        return this.idRegistro;
    }
    
    public void setIdRegistro(String idRegistro) {
        this.idRegistro = idRegistro;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="IdInvestigacion")
    public Investigacion getInvestigacion() {
        return this.investigacion;
    }
    
    public void setInvestigacion(Investigacion investigacion) {
        this.investigacion = investigacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="IdInvestigacion", referencedColumnName="IdInvestigacion", insertable=false, updatable=false), 
        @JoinColumn(name="IdInvestigador", referencedColumnName="IdInvestigador", insertable=false, updatable=false) } )
    public InvestigacionInvestigador getInvestigacionInvestigador() {
        return this.investigacionInvestigador;
    }
    
    public void setInvestigacionInvestigador(InvestigacionInvestigador investigacionInvestigador) {
        this.investigacionInvestigador = investigacionInvestigador;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="IdInvestigacion", referencedColumnName="IdInvestigacion", insertable=false, updatable=false), 
        @JoinColumn(name="IdSede", referencedColumnName="IdSede", insertable=false, updatable=false) } )
    public InvestigacionSede getInvestigacionSede() {
        return this.investigacionSede;
    }
    
    public void setInvestigacionSede(InvestigacionSede investigacionSede) {
        this.investigacionSede = investigacionSede;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FechaAprobacion", length=23)
    public Date getFechaAprobacion() {
        return this.fechaAprobacion;
    }
    
    public void setFechaAprobacion(Date fechaAprobacion) {
        this.fechaAprobacion = fechaAprobacion;
    }

    
    @Column(name="ParamEstado", length=4)
    public String getParamEstado() {
        return this.paramEstado;
    }
    
    public void setParamEstado(String paramEstado) {
        this.paramEstado = paramEstado;
    }

    
    @Column(name="Observacion", length=250)
    public String getObservacion() {
        return this.observacion;
    }
    
    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    
    @Column(name="FarmacoExperimental", length=250)
    public String getFarmacoExperimental() {
        return this.farmacoExperimental;
    }
    
    public void setFarmacoExperimental(String farmacoExperimental) {
        this.farmacoExperimental = farmacoExperimental;
    }

    
    @Column(name="Placebo")
    public Boolean getPlacebo() {
        return this.placebo;
    }
    
    public void setPlacebo(Boolean placebo) {
        this.placebo = placebo;
    }

    
    @Column(name="PacienteEas", length=250)
    public String getPacienteEas() {
        return this.pacienteEas;
    }
    
    public void setPacienteEas(String pacienteEas) {
        this.pacienteEas = pacienteEas;
    }

    
    @Column(name="EasLocal", length=250)
    public String getEasLocal() {
        return this.easLocal;
    }
    
    public void setEasLocal(String easLocal) {
        this.easLocal = easLocal;
    }

    
    @Column(name="ParamNotificacion", length=4)
    public String getParamNotificacion() {
        return this.paramNotificacion;
    }
    
    public void setParamNotificacion(String paramNotificacion) {
        this.paramNotificacion = paramNotificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FechaEas", length=23)
    public Date getFechaEas() {
        return this.fechaEas;
    }
    
    public void setFechaEas(Date fechaEas) {
        this.fechaEas = fechaEas;
    }

    
    @Column(name="VisitaInspeccion", length=500)
    public String getVisitaInspeccion() {
        return this.visitaInspeccion;
    }
    
    public void setVisitaInspeccion(String visitaInspeccion) {
        this.visitaInspeccion = visitaInspeccion;
    }

    
    @Column(name="EstudioNinos")
    public Boolean getEstudioNinos() {
        return this.estudioNinos;
    }
    
    public void setEstudioNinos(Boolean estudioNinos) {
        this.estudioNinos = estudioNinos;
    }

    
    @Column(name="VisitaInspeccionIns", length=500)
    public String getVisitaInspeccionIns() {
        return this.visitaInspeccionIns;
    }
    
    public void setVisitaInspeccionIns(String visitaInspeccionIns) {
        this.visitaInspeccionIns = visitaInspeccionIns;
    }

    
    @Column(name="UsuarioIngresa", length=50)
    public String getUsuarioIngresa() {
        return this.usuarioIngresa;
    }
    
    public void setUsuarioIngresa(String usuarioIngresa) {
        this.usuarioIngresa = usuarioIngresa;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FechaIngreso", length=23)
    public Date getFechaIngreso() {
        return this.fechaIngreso;
    }
    
    public void setFechaIngreso(Date fechaIngreso) {
        this.fechaIngreso = fechaIngreso;
    }

    
    @Column(name="UsuarioModifica", length=50)
    public String getUsuarioModifica() {
        return this.usuarioModifica;
    }
    
    public void setUsuarioModifica(String usuarioModifica) {
        this.usuarioModifica = usuarioModifica;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="FechaModificacion", length=23)
    public Date getFechaModificacion() {
        return this.fechaModificacion;
    }
    
    public void setFechaModificacion(Date fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="registro")
    public Set<RegistroBitacora> getRegistroBitacoras() {
        return this.registroBitacoras;
    }
    
    public void setRegistroBitacoras(Set<RegistroBitacora> registroBitacoras) {
        this.registroBitacoras = registroBitacoras;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="registro")
    public Set<Correspondencia> getCorrespondencias() {
        return this.correspondencias;
    }
    
    public void setCorrespondencias(Set<Correspondencia> correspondencias) {
        this.correspondencias = correspondencias;
    }




}


